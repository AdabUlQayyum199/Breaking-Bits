{"ast":null,"code":"var _jsxFileName = \"D:\\\\HeapByte\\\\React Folder\\\\Adab GitHub Breaking Bits\\\\Breaking-Bits\\\\src\\\\pages\\\\comming-soon.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ComingSoon = ({\n  expiryTimestamp\n}) => {\n  _s();\n  const [countdown, setCountdown] = useState({\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0\n  });\n  useEffect(() => {\n    const endDate = new Date(); // Get current date/time\n    endDate.setDate(endDate.getDate() + 2); // Add 2 days\n\n    const interval = setInterval(() => {\n      const now = new Date().getTime();\n      const distance = endDate.getTime() - now;\n      const days = Math.floor(distance / (1000 * 60 * 60 * 24));\n      const hours = Math.floor(distance % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n      const minutes = Math.floor(distance % (1000 * 60 * 60) / (1000 * 60));\n      const seconds = Math.floor(distance % (1000 * 60) / 1000);\n      setCountdown({\n        days,\n        hours,\n        minutes,\n        seconds\n      });\n      if (distance < 0) {\n        clearInterval(interval);\n        // Optionally, handle what happens when the countdown reaches zero\n      }\n    }, 1000); // Update every second\n\n    return () => clearInterval(interval); // Cleanup the interval on component unmount\n  }, []);\n\n  // Function to add leading zero if the number is single digit\n  const formatTime = time => {\n    return time < 10 ? `0${time}` : time;\n  };\n\n  // Get current date and time\n  const currentTime = new Date().toLocaleString();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"coming_soon\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"coming_soon_timer\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"hours\",\n          children: formatTime(countdown.hours)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), \" :\", /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"minutes\",\n          children: formatTime(countdown.minutes)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), \" :\", /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"seconds\",\n          children: formatTime(countdown.seconds)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Current Time: \", currentTime]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(ComingSoon, \"TU/QjcqfKeARAHbBLT3p3xW5pgU=\");\n_c = ComingSoon;\nexport default ComingSoon;\nvar _c;\n$RefreshReg$(_c, \"ComingSoon\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ComingSoon","expiryTimestamp","_s","countdown","setCountdown","days","hours","minutes","seconds","endDate","Date","setDate","getDate","interval","setInterval","now","getTime","distance","Math","floor","clearInterval","formatTime","time","currentTime","toLocaleString","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/HeapByte/React Folder/Adab GitHub Breaking Bits/Breaking-Bits/src/pages/comming-soon.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst ComingSoon = ({ expiryTimestamp }) => {\r\n  const [countdown, setCountdown] = useState({\r\n    days: 0,\r\n    hours: 0,\r\n    minutes: 0,\r\n    seconds: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const endDate = new Date(); // Get current date/time\r\n    endDate.setDate(endDate.getDate() + 2); // Add 2 days\r\n\r\n    const interval = setInterval(() => {\r\n      const now = new Date().getTime();\r\n      const distance = endDate.getTime() - now;\r\n\r\n      const days = Math.floor(distance / (1000 * 60 * 60 * 24));\r\n      const hours = Math.floor(\r\n        (distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\r\n      );\r\n      const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n      const seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n\r\n      setCountdown({ days, hours, minutes, seconds });\r\n\r\n      if (distance < 0) {\r\n        clearInterval(interval);\r\n        // Optionally, handle what happens when the countdown reaches zero\r\n      }\r\n    }, 1000); // Update every second\r\n\r\n    return () => clearInterval(interval); // Cleanup the interval on component unmount\r\n  }, []);\r\n\r\n  // Function to add leading zero if the number is single digit\r\n  const formatTime = (time) => {\r\n    return time < 10 ? `0${time}` : time;\r\n  };\r\n\r\n  // Get current date and time\r\n  const currentTime = new Date().toLocaleString();\r\n\r\n  return (\r\n    <div className=\"coming_soon\">\r\n      <div>\r\n        <div className=\"coming_soon_timer\">\r\n          <span id=\"hours\">{formatTime(countdown.hours)}</span> :\r\n          <span id=\"minutes\">{formatTime(countdown.minutes)}</span> :\r\n          <span id=\"seconds\">{formatTime(countdown.seconds)}</span>\r\n        </div>\r\n        <div>Current Time: {currentTime}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ComingSoon;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}