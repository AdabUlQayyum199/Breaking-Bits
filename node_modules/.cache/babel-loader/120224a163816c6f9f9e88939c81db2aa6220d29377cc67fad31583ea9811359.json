{"ast":null,"code":"var _jsxFileName = \"D:\\\\HeapByte\\\\React Folder\\\\Adab GitHub Breaking Bits\\\\Breaking-Bits\\\\src\\\\pages\\\\comming-soon.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ComingSoon = () => {\n  _s();\n  const [remainingTime, setRemainingTime] = useState({\n    hours: 0,\n    minutes: 0,\n    seconds: 0\n  });\n  useEffect(() => {\n    // Set the target deadline in local storage\n    const setTargetDeadline = () => {\n      const deadline = new Date(\"2024-04-10T12:00:00\"); // April 10th at 12:00 PM\n      localStorage.setItem(\"endingTime\", deadline.getTime().toString());\n    };\n\n    // Calculate remaining time in hours, minutes, and seconds\n    const calculateRemainingTime = () => {\n      const currentTime = new Date().getTime();\n      const endingTime = parseInt(localStorage.getItem(\"endingTime\"), 10);\n      if (isNaN(endingTime)) {\n        // Handle invalid or missing deadline\n        return {\n          hours: 0,\n          minutes: 0,\n          seconds: 0\n        };\n      }\n      let timeDiff = endingTime - currentTime;\n      if (timeDiff < 0) {\n        // Handle case where deadline has passed\n        timeDiff = 0;\n      }\n      const hours = Math.floor(timeDiff / (1000 * 60 * 60));\n      const minutes = Math.floor(timeDiff % (1000 * 60 * 60) / (1000 * 60));\n      const seconds = Math.floor(timeDiff % (1000 * 60) / 1000);\n      return {\n        hours,\n        minutes,\n        seconds\n      };\n    };\n    setTargetDeadline();\n    const interval = setInterval(() => {\n      const remainingTime = calculateRemainingTime();\n      setRemainingTime(remainingTime);\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"coming-soon-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"countdown-timer\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"hours\",\n        children: remainingTime.hours.toString().padStart(2, \"0\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), \":\", /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"minutes\",\n        children: remainingTime.minutes.toString().padStart(2, \"0\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), \":\", /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"seconds\",\n        children: remainingTime.seconds.toString().padStart(2, \"0\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(ComingSoon, \"ss/WGqdmihMPn3lPpurZMwyLpT4=\");\n_c = ComingSoon;\nexport default ComingSoon;\nvar _c;\n$RefreshReg$(_c, \"ComingSoon\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","ComingSoon","_s","remainingTime","setRemainingTime","hours","minutes","seconds","setTargetDeadline","deadline","Date","localStorage","setItem","getTime","toString","calculateRemainingTime","currentTime","endingTime","parseInt","getItem","isNaN","timeDiff","Math","floor","interval","setInterval","clearInterval","className","children","id","padStart","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/HeapByte/React Folder/Adab GitHub Breaking Bits/Breaking-Bits/src/pages/comming-soon.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nconst ComingSoon = () => {\r\n  const [remainingTime, setRemainingTime] = useState({\r\n    hours: 0,\r\n    minutes: 0,\r\n    seconds: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Set the target deadline in local storage\r\n    const setTargetDeadline = () => {\r\n      const deadline = new Date(\"2024-04-10T12:00:00\"); // April 10th at 12:00 PM\r\n      localStorage.setItem(\"endingTime\", deadline.getTime().toString());\r\n    };\r\n\r\n    // Calculate remaining time in hours, minutes, and seconds\r\n    const calculateRemainingTime = () => {\r\n      const currentTime = new Date().getTime();\r\n      const endingTime = parseInt(localStorage.getItem(\"endingTime\"), 10);\r\n\r\n      if (isNaN(endingTime)) {\r\n        // Handle invalid or missing deadline\r\n        return { hours: 0, minutes: 0, seconds: 0 };\r\n      }\r\n\r\n      let timeDiff = endingTime - currentTime;\r\n      if (timeDiff < 0) {\r\n        // Handle case where deadline has passed\r\n        timeDiff = 0;\r\n      }\r\n\r\n      const hours = Math.floor(timeDiff / (1000 * 60 * 60));\r\n      const minutes = Math.floor((timeDiff % (1000 * 60 * 60)) / (1000 * 60));\r\n      const seconds = Math.floor((timeDiff % (1000 * 60)) / 1000);\r\n\r\n      return { hours, minutes, seconds };\r\n    };\r\n\r\n    setTargetDeadline();\r\n\r\n    const interval = setInterval(() => {\r\n      const remainingTime = calculateRemainingTime();\r\n      setRemainingTime(remainingTime);\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"coming-soon-container\">\r\n      <div className=\"countdown-timer\">\r\n        <span id=\"hours\">\r\n          {remainingTime.hours.toString().padStart(2, \"0\")}\r\n        </span>\r\n        :\r\n        <span id=\"minutes\">\r\n          {remainingTime.minutes.toString().padStart(2, \"0\")}\r\n        </span>\r\n        :\r\n        <span id=\"seconds\">\r\n          {remainingTime.seconds.toString().padStart(2, \"0\")}\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ComingSoon;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}