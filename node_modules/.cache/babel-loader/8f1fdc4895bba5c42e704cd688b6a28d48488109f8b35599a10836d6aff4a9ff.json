{"ast":null,"code":"var _jsxFileName = \"D:\\\\HeapByte\\\\React Folder\\\\Adab GitHub Breaking Bits\\\\Breaking-Bits\\\\src\\\\pages\\\\comming-soon.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ComingSoon = ({\n  expiryTimestamp\n}) => {\n  _s();\n  const [timeLeft, setTimeLeft] = useState(calculateTimeLeft(expiryTimestamp));\n  useEffect(() => {\n    const timer = setInterval(() => {\n      const updatedTimeLeft = calculateTimeLeft(expiryTimestamp);\n      setTimeLeft(updatedTimeLeft);\n      localStorage.setItem(\"timeLeft\", JSON.stringify(updatedTimeLeft));\n    }, 1000);\n    return () => clearInterval(timer); // Clear interval on component unmount\n  }, [expiryTimestamp]);\n  useEffect(() => {\n    const storedTimeLeft = localStorage.getItem(\"timeLeft\");\n    if (storedTimeLeft) {\n      setTimeLeft(JSON.parse(storedTimeLeft));\n    }\n  }, []);\n  function calculateTimeLeft(timestamp) {\n    const difference = timestamp - new Date();\n    if (difference <= 0) {\n      return {\n        hours: 0,\n        minutes: 0,\n        seconds: 0\n      }; // Timer expired\n    }\n    return {\n      hours: Math.floor(difference / (1000 * 60 * 60) % 24),\n      minutes: Math.floor(difference / 1000 / 60 % 60),\n      seconds: Math.floor(difference / 1000 % 60)\n    };\n  }\n  const addLeadingZero = value => {\n    return value.toString().padStart(2, \"0\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"coming_soon\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"coming_soon_timer\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"hours\",\n          children: addLeadingZero(timeLeft.hours)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"minutes\",\n          children: addLeadingZero(timeLeft.minutes)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"seconds\",\n          children: addLeadingZero(timeLeft.seconds)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(ComingSoon, \"fZw6+cnToThWaXR0Tmv0aDysJlQ=\");\n_c = ComingSoon;\nexport default ComingSoon;\nvar _c;\n$RefreshReg$(_c, \"ComingSoon\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ComingSoon","expiryTimestamp","_s","timeLeft","setTimeLeft","calculateTimeLeft","timer","setInterval","updatedTimeLeft","localStorage","setItem","JSON","stringify","clearInterval","storedTimeLeft","getItem","parse","timestamp","difference","Date","hours","minutes","seconds","Math","floor","addLeadingZero","value","toString","padStart","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/HeapByte/React Folder/Adab GitHub Breaking Bits/Breaking-Bits/src/pages/comming-soon.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst ComingSoon = ({ expiryTimestamp }) => {\r\n  const [timeLeft, setTimeLeft] = useState(calculateTimeLeft(expiryTimestamp));\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      const updatedTimeLeft = calculateTimeLeft(expiryTimestamp);\r\n      setTimeLeft(updatedTimeLeft);\r\n      localStorage.setItem(\"timeLeft\", JSON.stringify(updatedTimeLeft));\r\n    }, 1000);\r\n\r\n    return () => clearInterval(timer); // Clear interval on component unmount\r\n  }, [expiryTimestamp]);\r\n\r\n  useEffect(() => {\r\n    const storedTimeLeft = localStorage.getItem(\"timeLeft\");\r\n    if (storedTimeLeft) {\r\n      setTimeLeft(JSON.parse(storedTimeLeft));\r\n    }\r\n  }, []);\r\n\r\n  function calculateTimeLeft(timestamp) {\r\n    const difference = timestamp - new Date();\r\n    if (difference <= 0) {\r\n      return { hours: 0, minutes: 0, seconds: 0 }; // Timer expired\r\n    }\r\n\r\n    return {\r\n      hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\r\n      minutes: Math.floor((difference / 1000 / 60) % 60),\r\n      seconds: Math.floor((difference / 1000) % 60),\r\n    };\r\n  }\r\n\r\n  const addLeadingZero = (value) => {\r\n    return value.toString().padStart(2, \"0\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"coming_soon\">\r\n      <div>\r\n        <div className=\"coming_soon_timer\">\r\n          <span id=\"hours\">{addLeadingZero(timeLeft.hours)}</span>\r\n          <span id=\"minutes\">{addLeadingZero(timeLeft.minutes)}</span>\r\n          <span id=\"seconds\">{addLeadingZero(timeLeft.seconds)}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ComingSoon;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}